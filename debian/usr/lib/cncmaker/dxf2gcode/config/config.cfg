
#  Section and variable names must be valid Python identifiers
#      do not use whitespace in names

# do not edit the following section name:
[Version]
    # do not edit the following value:
    config_version = 9.7

[Paths]
    # by default look for DXF files in
    import_dir = D:/Eclipse_Workspace/DXF2GCODE/trunk/dxf
    
    # export generated gcode by default to
    output_dir = D:

[Filters]
    pstoedit_cmd = C:\Program Files (x86)\pstoedit\pstoedit.exe
    pstoedit_opt = -f, dxf, -mm, -dt

[Axis_letters]
    ax1_letter = X
    ax2_letter = Y
    ax3_letter = Z

[Plane_Coordinates]
    axis1_start_end = 0.0
    axis2_start_end = 0.0

[Depth_Coordinates]
    axis3_retract = 15.0
    axis3_safe_margin = 3.0
    axis3_start_mill_depth = 0.0
    axis3_slice_depth = -1.5
    axis3_mill_depth = -3.0

[Feed_Rates]
    f_g1_plane = 400.0
    f_g1_depth = 150.0

[General]
    mode3d = False
    write_to_stdout = False
    show_disabled_paths = True
    live_update_export_route = False
    split_line_segments = False
    automatic_cutter_compensation = False
    # machine types supported: milling; lathe; drag_knife
    machine_type = milling
    # The unit used for all values in this file
    tool_units = mm

[Cutter_Compensation]
    # if done_by_machine is set to False DXF2GCODE will create a virtual path for G41 and G42 command. And output
    # is set to G40; i.e. it will create the path that normally your machine will create with cutter compensation
    done_by_machine = True
    # The percentage below denotes the minimal / maximal path of the cutter offset path that should be met such
    # that the current starting point can be considered as a good starting point. Otherwise it moves the starting
    # point to the next closest point and tries it again.
    min_length_considered = 0.6
    max_length_considered = 1.4
    # If the direction is not maintained of current shape it moves the starting point and tries it again
    direction_maintained = True

[Drag_Knife_Options]
    # drag_angle: if larger than this angle (in degrees), tool retracts to dragDepth
    # the dragDepth is given by axis3_slice_depth
    drag_angle = 20.0

[Route_Optimisation]
    default_TSP = False
    
    # Path optimizer behaviour:
    #  CONSTRAIN_ORDER_ONLY: fixed Shapes and optimized Shapes can be mixed. Only order of fixed shapes is kept
    #  CONSTRAIN_PLACE_AFTER: optimized Shapes are always placed after any fixed Shape
    TSP_shape_order = CONSTRAIN_ORDER_ONLY
    mutation_rate = 0.95
    max_population = 20
    max_iterations = 300
    begin_art = heuristic

[Import_Parameters]
    point_tolerance = 0.001
    spline_check = 3
    fitting_tolerance = 0.001
    # insert elements (which are part of a block) to layer where the block is inserted
    insert_at_block_layer = False

[Layer_Options]
    id_float_separator = :
    
    # mill options
    mill_depth_identifiers = MillDepth, Md, TiefeGesamt, Tg
    slice_depth_identifiers = SliceDepth, Sd, TiefeZustellung, Tz
    start_mill_depth_identifiers = StartMillDepth, SMd, StartTiefe, St
    retract_identifiers = RetractHeight, Rh, Freifahrthoehe, FFh
    safe_margin_identifiers = SafeMargin, Sm, Sicherheitshoehe, Sh
    f_g1_plane_identifiers = FeedXY, Fxy, VorschubXY, Vxy, F
    f_g1_depth_identifiers = FeedZ, Fz, VorschubZ, Vz
    
    # tool options
    tool_nr_identifiers = ToolNr, Tn, T, WerkzeugNummer, Wn
    tool_diameter_identifiers = ToolDiameter, Td, WerkzeugDurchmesser, Wd
    spindle_speed_identifiers = SpindleSpeed, Drehzahl, RPM, UPM, S
    start_radius_identifiers = StartRadius, Sr

[Tool_Parameters]
    [[1]]
        diameter = 2.0
        speed = 6000.0
        start_radius = 0.2
    
    [[2]]
        diameter = 2.0
        speed = 6000.0
        start_radius = 1.0
    
    [[10]]
        diameter = 10.0
        speed = 6000.0
        start_radius = 2.0

[Custom_Actions]
    [[custom_gcode]]
        gcode = '"""(change subsection name and insert your custom GCode here. Use triple quotes to place the code on several lines)"""'

[Logging]
    # Logging to textfile is enabled automatically for now
    logfile = logfile.txt
    
    # log levels are, in increasing importance:
    #      DEBUG; INFO; WARNING; ERROR; CRITICAL
    # log events with importance >= loglevel are logged to the
    # corresponding output
    
    # this really goes to stderr
    console_loglevel = CRITICAL
    
    file_loglevel = DEBUG
    
    # logging level for the message window
    window_loglevel = INFO
